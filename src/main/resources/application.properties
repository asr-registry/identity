server.port=4003


## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.datasource.url=jdbc:postgresql://localhost:5432/identity
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.username= web
spring.datasource.password= web

## serialization of lazyloaded relationship causes to error when objects not loaded
#spring.jackson.serialization.fail-on-empty-beans=false

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQL82Dialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

#Database Revision
#spring.jpa.properties.org.hibernate.envers.default_schema=revision


# logging
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} %-5level %logger{36} - %msg%n
logging.level.org.hibernate.SQL=debug
logging.level.org.springframework.web.=debug
logging.level.org.springframework.security=debug



## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=false
# Threshold after which files are written to disk.
#spring.servlet.multipart.file-size-threshold=2MB
# Max file size.
#spring.servlet.multipart.max-file-size=30MB
# Max Request Size
#spring.servlet.multipart.max-request-size=30MB


# Tomcat Config
#server.connection-timeout=100s
#server.max-http-header-size=64KB
#server.tomcat.accept-count=10000
#server.tomcat.max-connections=10000
#server.tomcat.max-threads=200
#server.tomcat.min-spare-threads=10
#server.tomcat.max-swallow-size=50MB
#server.tomcat.max-http-post-size=50MB



